@model EmployeeHierarchy.API.Models.CreateEmployeeViewModel

@{
    ViewData["Title"] = "Add Employee / Upload CSV";
    Layout = "_Layout";
}

<div class="container mt-5" style="max-width: 600px;">
    <h2 class="text-center mb-4">Add New Employee</h2>
    <form id="createEmployeeForm" class="mb-5">
        <div class="mb-3">
            <label asp-for="FirstName" class="form-label"></label>
            <input asp-for="FirstName" class="form-control" id="FirstName" />
            <span asp-validation-for="FirstName" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="LastName" class="form-label"></label>
            <input asp-for="LastName" class="form-control" id="LastName" />
            <span asp-validation-for="LastName" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="PositionId" class="form-label"></label>
            <select asp-for="PositionId" asp-items="Model.Positions" class="form-select" id="PositionId">
                <option value="">-- Select Position --</option>
            </select>
            <span asp-validation-for="PositionId" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label for="ManagerPositionId" class="form-label">Manager</label>
            <select id="ManagerPositionId" class="form-select" asp-items="Model.Positions">
                <option value="">-- Select Position --</option>
            </select>

            <select asp-for="ManagerEmployeeId" class="form-select" id="ManagerEmployeeId" disabled>
                <option value="">-- Select Manager --</option>
            </select>
            <span asp-validation-for="ManagerEmployeeId" class="text-danger"></span>
        </div>
        
        <div class="form-check mb-3">
            <input asp-for="CreateUser" class="form-check-input" type="checkbox" id="CreateUser" />
            <label class="form-check-label" for="CreateUser">
                Create user account for this employee
            </label>
        </div>

        <div class="text-center">
            <button type="submit" class="btn btn-success px-4">Create Employee</button>
        </div>
    </form>

    <hr />

    <h2 class="text-center mb-4">Upload CSV</h2>
    <form asp-action="UploadCsv" asp-controller="Home" method="post" enctype="multipart/form-data">
        <div class="mb-3">
            <label for="csvFile" class="form-label">Choose CSV File</label>
            <input type="file" name="csvFile" id="csvFile" class="form-control" accept=".csv" required />
        </div>

        <div class="text-center">
            <button type="submit" class="btn btn-primary px-4">Upload</button>
        </div>
    </form>
</div>

<!-- Modal -->
<div class="modal fade" id="feedbackModal" tabindex="-1" aria-labelledby="feedbackModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header" id="feedbackModalHeader">
                <h5 class="modal-title" id="feedbackModalLabel">Success</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center" id="feedbackModalBody">
                Employee was created successfully.
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.getElementById("ManagerPositionId").addEventListener("change", function () {
            const positionId = this.value;
            const managerDropdown = document.getElementById("ManagerEmployeeId");
            managerDropdown.innerHTML = '<option value="">-- Loading... --</option>';
            managerDropdown.disabled = true;

            if (!positionId) {
                managerDropdown.innerHTML = '<option value="">-- Select Manager (optional) --</option>';
                return;
            }

            fetch(`/api/Employees/get_managers_position?positionId=${positionId}`)
                .then(response => response.json())
                .then(data => {
                    managerDropdown.innerHTML = '<option value="">-- Select Manager (optional) --</option>';
                    data.forEach(emp => {
                        const option = document.createElement("option");
                        option.value = emp.employeeId;
                        option.text = `${emp.firstName} ${emp.lastName}`;
                        managerDropdown.appendChild(option);
                    });
                    managerDropdown.disabled = false;
                })
                .catch(err => {
                    console.error("Failed to fetch managers:", err);
                    managerDropdown.innerHTML = '<option value="">-- Error loading managers --</option>';
                });
        }); 
        
        document.getElementById("createEmployeeForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            const employee = {
                firstName: document.getElementById("FirstName").value,
                lastName: document.getElementById("LastName").value,
                positionId: parseInt(document.getElementById("PositionId").value),
                managerEmployeeId: document.getElementById("ManagerEmployeeId").value || null,
                createUser: document.getElementById("CreateUser").checked
            };

            const header = document.getElementById("feedbackModalHeader");
            const modal = new bootstrap.Modal(document.getElementById('feedbackModal'));
            const title = document.getElementById("feedbackModalLabel");
            const body = document.getElementById("feedbackModalBody");

            try {
                const response = await fetch("/api/Employees/create-employee", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(employee)
                });

                if (response.ok) {
                    header.classList.remove("bg-danger");
                    header.classList.add("bg-success");
                    title.textContent = "Success";
                    title.className = "modal-title text-white";
                    body.textContent = "Employee was created successfully.";
                    modal.show();
                    this.reset();
                } else {
                    const errorJson = await response.json();
                    const errorMessage = errorJson.message || "Unknown error";
                    header.classList.remove("bg-success");
                    header.classList.add("bg-danger");
                    title.textContent = "Error";
                    title.className = "modal-title text-white";
                    body.textContent = "Failed to create employee: " + errorMessage;
                    modal.show();
                }
            } catch (err) {
                console.error("Error:", err);
                header.classList.remove("bg-success");
                header.classList.add("bg-danger");
                title.textContent = "Error";
                title.className = "modal-title text-white";
                body.textContent = "Unexpected error occurred.";
                modal.show();
            }
        });
    </script>
}
